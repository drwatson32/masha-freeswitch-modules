// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: yandex/cloud/ai/stt/v2/stt_service.proto

#include "yandex/cloud/ai/stt/v2/stt_service.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2fduration_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Duration_google_2fprotobuf_2fduration_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_yandex_2fcloud_2fai_2fstt_2fv2_2fstt_5fservice_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RecognitionAudio_yandex_2fcloud_2fai_2fstt_2fv2_2fstt_5fservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_yandex_2fcloud_2fai_2fstt_2fv2_2fstt_5fservice_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_RecognitionConfig_yandex_2fcloud_2fai_2fstt_2fv2_2fstt_5fservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_yandex_2fcloud_2fai_2fstt_2fv2_2fstt_5fservice_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RecognitionSpec_yandex_2fcloud_2fai_2fstt_2fv2_2fstt_5fservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_yandex_2fcloud_2fai_2fstt_2fv2_2fstt_5fservice_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SpeechRecognitionAlternative_yandex_2fcloud_2fai_2fstt_2fv2_2fstt_5fservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_yandex_2fcloud_2fai_2fstt_2fv2_2fstt_5fservice_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SpeechRecognitionChunk_yandex_2fcloud_2fai_2fstt_2fv2_2fstt_5fservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_yandex_2fcloud_2fai_2fstt_2fv2_2fstt_5fservice_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SpeechRecognitionResult_yandex_2fcloud_2fai_2fstt_2fv2_2fstt_5fservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_yandex_2fcloud_2fai_2fstt_2fv2_2fstt_5fservice_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_WordInfo_yandex_2fcloud_2fai_2fstt_2fv2_2fstt_5fservice_2eproto;
namespace yandex {
namespace cloud {
namespace ai {
namespace stt {
namespace v2 {
class LongRunningRecognitionRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<LongRunningRecognitionRequest> _instance;
} _LongRunningRecognitionRequest_default_instance_;
class LongRunningRecognitionResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<LongRunningRecognitionResponse> _instance;
} _LongRunningRecognitionResponse_default_instance_;
class StreamingRecognitionRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<StreamingRecognitionRequest> _instance;
  const ::yandex::cloud::ai::stt::v2::RecognitionConfig* config_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr audio_content_;
} _StreamingRecognitionRequest_default_instance_;
class StreamingRecognitionResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<StreamingRecognitionResponse> _instance;
} _StreamingRecognitionResponse_default_instance_;
class RecognitionAudioDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RecognitionAudio> _instance;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr content_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr uri_;
} _RecognitionAudio_default_instance_;
class RecognitionConfigDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RecognitionConfig> _instance;
} _RecognitionConfig_default_instance_;
class RecognitionSpecDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RecognitionSpec> _instance;
} _RecognitionSpec_default_instance_;
class SpeechRecognitionChunkDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SpeechRecognitionChunk> _instance;
} _SpeechRecognitionChunk_default_instance_;
class SpeechRecognitionResultDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SpeechRecognitionResult> _instance;
} _SpeechRecognitionResult_default_instance_;
class SpeechRecognitionAlternativeDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SpeechRecognitionAlternative> _instance;
} _SpeechRecognitionAlternative_default_instance_;
class WordInfoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<WordInfo> _instance;
} _WordInfo_default_instance_;
}  // namespace v2
}  // namespace stt
}  // namespace ai
}  // namespace cloud
}  // namespace yandex
static void InitDefaultsscc_info_LongRunningRecognitionRequest_yandex_2fcloud_2fai_2fstt_2fv2_2fstt_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::yandex::cloud::ai::stt::v2::_LongRunningRecognitionRequest_default_instance_;
    new (ptr) ::yandex::cloud::ai::stt::v2::LongRunningRecognitionRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::yandex::cloud::ai::stt::v2::LongRunningRecognitionRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_LongRunningRecognitionRequest_yandex_2fcloud_2fai_2fstt_2fv2_2fstt_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsscc_info_LongRunningRecognitionRequest_yandex_2fcloud_2fai_2fstt_2fv2_2fstt_5fservice_2eproto}, {
      &scc_info_RecognitionConfig_yandex_2fcloud_2fai_2fstt_2fv2_2fstt_5fservice_2eproto.base,
      &scc_info_RecognitionAudio_yandex_2fcloud_2fai_2fstt_2fv2_2fstt_5fservice_2eproto.base,}};

static void InitDefaultsscc_info_LongRunningRecognitionResponse_yandex_2fcloud_2fai_2fstt_2fv2_2fstt_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::yandex::cloud::ai::stt::v2::_LongRunningRecognitionResponse_default_instance_;
    new (ptr) ::yandex::cloud::ai::stt::v2::LongRunningRecognitionResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::yandex::cloud::ai::stt::v2::LongRunningRecognitionResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_LongRunningRecognitionResponse_yandex_2fcloud_2fai_2fstt_2fv2_2fstt_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_LongRunningRecognitionResponse_yandex_2fcloud_2fai_2fstt_2fv2_2fstt_5fservice_2eproto}, {
      &scc_info_SpeechRecognitionResult_yandex_2fcloud_2fai_2fstt_2fv2_2fstt_5fservice_2eproto.base,}};

static void InitDefaultsscc_info_RecognitionAudio_yandex_2fcloud_2fai_2fstt_2fv2_2fstt_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::yandex::cloud::ai::stt::v2::_RecognitionAudio_default_instance_;
    new (ptr) ::yandex::cloud::ai::stt::v2::RecognitionAudio();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::yandex::cloud::ai::stt::v2::RecognitionAudio::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RecognitionAudio_yandex_2fcloud_2fai_2fstt_2fv2_2fstt_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_RecognitionAudio_yandex_2fcloud_2fai_2fstt_2fv2_2fstt_5fservice_2eproto}, {}};

static void InitDefaultsscc_info_RecognitionConfig_yandex_2fcloud_2fai_2fstt_2fv2_2fstt_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::yandex::cloud::ai::stt::v2::_RecognitionConfig_default_instance_;
    new (ptr) ::yandex::cloud::ai::stt::v2::RecognitionConfig();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::yandex::cloud::ai::stt::v2::RecognitionConfig::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_RecognitionConfig_yandex_2fcloud_2fai_2fstt_2fv2_2fstt_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_RecognitionConfig_yandex_2fcloud_2fai_2fstt_2fv2_2fstt_5fservice_2eproto}, {
      &scc_info_RecognitionSpec_yandex_2fcloud_2fai_2fstt_2fv2_2fstt_5fservice_2eproto.base,}};

static void InitDefaultsscc_info_RecognitionSpec_yandex_2fcloud_2fai_2fstt_2fv2_2fstt_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::yandex::cloud::ai::stt::v2::_RecognitionSpec_default_instance_;
    new (ptr) ::yandex::cloud::ai::stt::v2::RecognitionSpec();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::yandex::cloud::ai::stt::v2::RecognitionSpec::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RecognitionSpec_yandex_2fcloud_2fai_2fstt_2fv2_2fstt_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_RecognitionSpec_yandex_2fcloud_2fai_2fstt_2fv2_2fstt_5fservice_2eproto}, {}};

static void InitDefaultsscc_info_SpeechRecognitionAlternative_yandex_2fcloud_2fai_2fstt_2fv2_2fstt_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::yandex::cloud::ai::stt::v2::_SpeechRecognitionAlternative_default_instance_;
    new (ptr) ::yandex::cloud::ai::stt::v2::SpeechRecognitionAlternative();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::yandex::cloud::ai::stt::v2::SpeechRecognitionAlternative::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SpeechRecognitionAlternative_yandex_2fcloud_2fai_2fstt_2fv2_2fstt_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_SpeechRecognitionAlternative_yandex_2fcloud_2fai_2fstt_2fv2_2fstt_5fservice_2eproto}, {
      &scc_info_WordInfo_yandex_2fcloud_2fai_2fstt_2fv2_2fstt_5fservice_2eproto.base,}};

static void InitDefaultsscc_info_SpeechRecognitionChunk_yandex_2fcloud_2fai_2fstt_2fv2_2fstt_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::yandex::cloud::ai::stt::v2::_SpeechRecognitionChunk_default_instance_;
    new (ptr) ::yandex::cloud::ai::stt::v2::SpeechRecognitionChunk();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::yandex::cloud::ai::stt::v2::SpeechRecognitionChunk::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SpeechRecognitionChunk_yandex_2fcloud_2fai_2fstt_2fv2_2fstt_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_SpeechRecognitionChunk_yandex_2fcloud_2fai_2fstt_2fv2_2fstt_5fservice_2eproto}, {
      &scc_info_SpeechRecognitionAlternative_yandex_2fcloud_2fai_2fstt_2fv2_2fstt_5fservice_2eproto.base,}};

static void InitDefaultsscc_info_SpeechRecognitionResult_yandex_2fcloud_2fai_2fstt_2fv2_2fstt_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::yandex::cloud::ai::stt::v2::_SpeechRecognitionResult_default_instance_;
    new (ptr) ::yandex::cloud::ai::stt::v2::SpeechRecognitionResult();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::yandex::cloud::ai::stt::v2::SpeechRecognitionResult::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SpeechRecognitionResult_yandex_2fcloud_2fai_2fstt_2fv2_2fstt_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_SpeechRecognitionResult_yandex_2fcloud_2fai_2fstt_2fv2_2fstt_5fservice_2eproto}, {
      &scc_info_SpeechRecognitionAlternative_yandex_2fcloud_2fai_2fstt_2fv2_2fstt_5fservice_2eproto.base,}};

static void InitDefaultsscc_info_StreamingRecognitionRequest_yandex_2fcloud_2fai_2fstt_2fv2_2fstt_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::yandex::cloud::ai::stt::v2::_StreamingRecognitionRequest_default_instance_;
    new (ptr) ::yandex::cloud::ai::stt::v2::StreamingRecognitionRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::yandex::cloud::ai::stt::v2::StreamingRecognitionRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_StreamingRecognitionRequest_yandex_2fcloud_2fai_2fstt_2fv2_2fstt_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_StreamingRecognitionRequest_yandex_2fcloud_2fai_2fstt_2fv2_2fstt_5fservice_2eproto}, {
      &scc_info_RecognitionConfig_yandex_2fcloud_2fai_2fstt_2fv2_2fstt_5fservice_2eproto.base,}};

static void InitDefaultsscc_info_StreamingRecognitionResponse_yandex_2fcloud_2fai_2fstt_2fv2_2fstt_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::yandex::cloud::ai::stt::v2::_StreamingRecognitionResponse_default_instance_;
    new (ptr) ::yandex::cloud::ai::stt::v2::StreamingRecognitionResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::yandex::cloud::ai::stt::v2::StreamingRecognitionResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_StreamingRecognitionResponse_yandex_2fcloud_2fai_2fstt_2fv2_2fstt_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_StreamingRecognitionResponse_yandex_2fcloud_2fai_2fstt_2fv2_2fstt_5fservice_2eproto}, {
      &scc_info_SpeechRecognitionChunk_yandex_2fcloud_2fai_2fstt_2fv2_2fstt_5fservice_2eproto.base,}};

static void InitDefaultsscc_info_WordInfo_yandex_2fcloud_2fai_2fstt_2fv2_2fstt_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::yandex::cloud::ai::stt::v2::_WordInfo_default_instance_;
    new (ptr) ::yandex::cloud::ai::stt::v2::WordInfo();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::yandex::cloud::ai::stt::v2::WordInfo::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_WordInfo_yandex_2fcloud_2fai_2fstt_2fv2_2fstt_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_WordInfo_yandex_2fcloud_2fai_2fstt_2fv2_2fstt_5fservice_2eproto}, {
      &scc_info_Duration_google_2fprotobuf_2fduration_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_yandex_2fcloud_2fai_2fstt_2fv2_2fstt_5fservice_2eproto[11];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_yandex_2fcloud_2fai_2fstt_2fv2_2fstt_5fservice_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_yandex_2fcloud_2fai_2fstt_2fv2_2fstt_5fservice_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_yandex_2fcloud_2fai_2fstt_2fv2_2fstt_5fservice_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::yandex::cloud::ai::stt::v2::LongRunningRecognitionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::yandex::cloud::ai::stt::v2::LongRunningRecognitionRequest, config_),
  PROTOBUF_FIELD_OFFSET(::yandex::cloud::ai::stt::v2::LongRunningRecognitionRequest, audio_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::yandex::cloud::ai::stt::v2::LongRunningRecognitionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::yandex::cloud::ai::stt::v2::LongRunningRecognitionResponse, chunks_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::yandex::cloud::ai::stt::v2::StreamingRecognitionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::yandex::cloud::ai::stt::v2::StreamingRecognitionRequest, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::yandex::cloud::ai::stt::v2::StreamingRecognitionRequestDefaultTypeInternal, config_),
  offsetof(::yandex::cloud::ai::stt::v2::StreamingRecognitionRequestDefaultTypeInternal, audio_content_),
  PROTOBUF_FIELD_OFFSET(::yandex::cloud::ai::stt::v2::StreamingRecognitionRequest, streaming_request_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::yandex::cloud::ai::stt::v2::StreamingRecognitionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::yandex::cloud::ai::stt::v2::StreamingRecognitionResponse, chunks_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::yandex::cloud::ai::stt::v2::RecognitionAudio, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::yandex::cloud::ai::stt::v2::RecognitionAudio, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::yandex::cloud::ai::stt::v2::RecognitionAudioDefaultTypeInternal, content_),
  offsetof(::yandex::cloud::ai::stt::v2::RecognitionAudioDefaultTypeInternal, uri_),
  PROTOBUF_FIELD_OFFSET(::yandex::cloud::ai::stt::v2::RecognitionAudio, audio_source_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::yandex::cloud::ai::stt::v2::RecognitionConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::yandex::cloud::ai::stt::v2::RecognitionConfig, specification_),
  PROTOBUF_FIELD_OFFSET(::yandex::cloud::ai::stt::v2::RecognitionConfig, folder_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::yandex::cloud::ai::stt::v2::RecognitionSpec, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::yandex::cloud::ai::stt::v2::RecognitionSpec, audio_encoding_),
  PROTOBUF_FIELD_OFFSET(::yandex::cloud::ai::stt::v2::RecognitionSpec, sample_rate_hertz_),
  PROTOBUF_FIELD_OFFSET(::yandex::cloud::ai::stt::v2::RecognitionSpec, language_code_),
  PROTOBUF_FIELD_OFFSET(::yandex::cloud::ai::stt::v2::RecognitionSpec, profanity_filter_),
  PROTOBUF_FIELD_OFFSET(::yandex::cloud::ai::stt::v2::RecognitionSpec, model_),
  PROTOBUF_FIELD_OFFSET(::yandex::cloud::ai::stt::v2::RecognitionSpec, partial_results_),
  PROTOBUF_FIELD_OFFSET(::yandex::cloud::ai::stt::v2::RecognitionSpec, single_utterance_),
  PROTOBUF_FIELD_OFFSET(::yandex::cloud::ai::stt::v2::RecognitionSpec, audio_channel_count_),
  PROTOBUF_FIELD_OFFSET(::yandex::cloud::ai::stt::v2::RecognitionSpec, raw_results_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::yandex::cloud::ai::stt::v2::SpeechRecognitionChunk, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::yandex::cloud::ai::stt::v2::SpeechRecognitionChunk, alternatives_),
  PROTOBUF_FIELD_OFFSET(::yandex::cloud::ai::stt::v2::SpeechRecognitionChunk, final_),
  PROTOBUF_FIELD_OFFSET(::yandex::cloud::ai::stt::v2::SpeechRecognitionChunk, end_of_utterance_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::yandex::cloud::ai::stt::v2::SpeechRecognitionResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::yandex::cloud::ai::stt::v2::SpeechRecognitionResult, alternatives_),
  PROTOBUF_FIELD_OFFSET(::yandex::cloud::ai::stt::v2::SpeechRecognitionResult, channel_tag_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::yandex::cloud::ai::stt::v2::SpeechRecognitionAlternative, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::yandex::cloud::ai::stt::v2::SpeechRecognitionAlternative, text_),
  PROTOBUF_FIELD_OFFSET(::yandex::cloud::ai::stt::v2::SpeechRecognitionAlternative, confidence_),
  PROTOBUF_FIELD_OFFSET(::yandex::cloud::ai::stt::v2::SpeechRecognitionAlternative, words_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::yandex::cloud::ai::stt::v2::WordInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::yandex::cloud::ai::stt::v2::WordInfo, start_time_),
  PROTOBUF_FIELD_OFFSET(::yandex::cloud::ai::stt::v2::WordInfo, end_time_),
  PROTOBUF_FIELD_OFFSET(::yandex::cloud::ai::stt::v2::WordInfo, word_),
  PROTOBUF_FIELD_OFFSET(::yandex::cloud::ai::stt::v2::WordInfo, confidence_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::yandex::cloud::ai::stt::v2::LongRunningRecognitionRequest)},
  { 7, -1, sizeof(::yandex::cloud::ai::stt::v2::LongRunningRecognitionResponse)},
  { 13, -1, sizeof(::yandex::cloud::ai::stt::v2::StreamingRecognitionRequest)},
  { 21, -1, sizeof(::yandex::cloud::ai::stt::v2::StreamingRecognitionResponse)},
  { 27, -1, sizeof(::yandex::cloud::ai::stt::v2::RecognitionAudio)},
  { 35, -1, sizeof(::yandex::cloud::ai::stt::v2::RecognitionConfig)},
  { 42, -1, sizeof(::yandex::cloud::ai::stt::v2::RecognitionSpec)},
  { 56, -1, sizeof(::yandex::cloud::ai::stt::v2::SpeechRecognitionChunk)},
  { 64, -1, sizeof(::yandex::cloud::ai::stt::v2::SpeechRecognitionResult)},
  { 71, -1, sizeof(::yandex::cloud::ai::stt::v2::SpeechRecognitionAlternative)},
  { 79, -1, sizeof(::yandex::cloud::ai::stt::v2::WordInfo)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::yandex::cloud::ai::stt::v2::_LongRunningRecognitionRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::yandex::cloud::ai::stt::v2::_LongRunningRecognitionResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::yandex::cloud::ai::stt::v2::_StreamingRecognitionRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::yandex::cloud::ai::stt::v2::_StreamingRecognitionResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::yandex::cloud::ai::stt::v2::_RecognitionAudio_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::yandex::cloud::ai::stt::v2::_RecognitionConfig_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::yandex::cloud::ai::stt::v2::_RecognitionSpec_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::yandex::cloud::ai::stt::v2::_SpeechRecognitionChunk_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::yandex::cloud::ai::stt::v2::_SpeechRecognitionResult_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::yandex::cloud::ai::stt::v2::_SpeechRecognitionAlternative_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::yandex::cloud::ai::stt::v2::_WordInfo_default_instance_),
};

const char descriptor_table_protodef_yandex_2fcloud_2fai_2fstt_2fv2_2fstt_5fservice_2eproto[] =
  "\n(yandex/cloud/ai/stt/v2/stt_service.pro"
  "to\022\026yandex.cloud.ai.stt.v2\032\034google/api/a"
  "nnotations.proto\032\036google/protobuf/durati"
  "on.proto\032 yandex/cloud/api/operation.pro"
  "to\032&yandex/cloud/operation/operation.pro"
  "to\"\223\001\n\035LongRunningRecognitionRequest\0229\n\006"
  "config\030\001 \001(\0132).yandex.cloud.ai.stt.v2.Re"
  "cognitionConfig\0227\n\005audio\030\002 \001(\0132(.yandex."
  "cloud.ai.stt.v2.RecognitionAudio\"a\n\036Long"
  "RunningRecognitionResponse\022\?\n\006chunks\030\001 \003"
  "(\0132/.yandex.cloud.ai.stt.v2.SpeechRecogn"
  "itionResult\"\210\001\n\033StreamingRecognitionRequ"
  "est\022;\n\006config\030\001 \001(\0132).yandex.cloud.ai.st"
  "t.v2.RecognitionConfigH\000\022\027\n\raudio_conten"
  "t\030\002 \001(\014H\000B\023\n\021streaming_request\"}\n\034Stream"
  "ingRecognitionResponse\022>\n\006chunks\030\001 \003(\0132."
  ".yandex.cloud.ai.stt.v2.SpeechRecognitio"
  "nChunkJ\004\010\002\020\003R\027end_of_single_utterance\"D\n"
  "\020RecognitionAudio\022\021\n\007content\030\001 \001(\014H\000\022\r\n\003"
  "uri\030\002 \001(\tH\000B\016\n\014audio_source\"f\n\021Recogniti"
  "onConfig\022>\n\rspecification\030\001 \001(\0132\'.yandex"
  ".cloud.ai.stt.v2.RecognitionSpec\022\021\n\tfold"
  "er_id\030\002 \001(\t\"\361\002\n\017RecognitionSpec\022M\n\016audio"
  "_encoding\030\001 \001(\01625.yandex.cloud.ai.stt.v2"
  ".RecognitionSpec.AudioEncoding\022\031\n\021sample"
  "_rate_hertz\030\002 \001(\003\022\025\n\rlanguage_code\030\003 \001(\t"
  "\022\030\n\020profanity_filter\030\004 \001(\010\022\r\n\005model\030\005 \001("
  "\t\022\027\n\017partial_results\030\007 \001(\010\022\030\n\020single_utt"
  "erance\030\010 \001(\010\022\033\n\023audio_channel_count\030\t \001("
  "\003\022\023\n\013raw_results\030\n \001(\010\"O\n\rAudioEncoding\022"
  "\036\n\032AUDIO_ENCODING_UNSPECIFIED\020\000\022\020\n\014LINEA"
  "R16_PCM\020\001\022\014\n\010OGG_OPUS\020\002\"\215\001\n\026SpeechRecogn"
  "itionChunk\022J\n\014alternatives\030\001 \003(\01324.yande"
  "x.cloud.ai.stt.v2.SpeechRecognitionAlter"
  "native\022\r\n\005final\030\002 \001(\010\022\030\n\020end_of_utteranc"
  "e\030\003 \001(\010\"z\n\027SpeechRecognitionResult\022J\n\014al"
  "ternatives\030\001 \003(\01324.yandex.cloud.ai.stt.v"
  "2.SpeechRecognitionAlternative\022\023\n\013channe"
  "l_tag\030\002 \001(\003\"q\n\034SpeechRecognitionAlternat"
  "ive\022\014\n\004text\030\001 \001(\t\022\022\n\nconfidence\030\002 \001(\002\022/\n"
  "\005words\030\003 \003(\0132 .yandex.cloud.ai.stt.v2.Wo"
  "rdInfo\"\210\001\n\010WordInfo\022-\n\nstart_time\030\001 \001(\0132"
  "\031.google.protobuf.Duration\022+\n\010end_time\030\002"
  " \001(\0132\031.google.protobuf.Duration\022\014\n\004word\030"
  "\003 \001(\t\022\022\n\nconfidence\030\004 \001(\0022\333\002\n\nSttService"
  "\022\304\001\n\024LongRunningRecognize\0225.yandex.cloud"
  ".ai.stt.v2.LongRunningRecognitionRequest"
  "\032!.yandex.cloud.operation.Operation\"R\202\323\344"
  "\223\002(\"#/speech/stt/v2/longRunningRecognize"
  ":\001*\262\322* \022\036LongRunningRecognitionResponse\022"
  "\205\001\n\022StreamingRecognize\0223.yandex.cloud.ai"
  ".stt.v2.StreamingRecognitionRequest\0324.ya"
  "ndex.cloud.ai.stt.v2.StreamingRecognitio"
  "nResponse\"\000(\0010\001B\\\n\032yandex.cloud.api.ai.s"
  "tt.v2Z>github.com/yandex-cloud/go-genpro"
  "to/yandex/cloud/ai/stt/v2;sttb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_yandex_2fcloud_2fai_2fstt_2fv2_2fstt_5fservice_2eproto_deps[4] = {
  &::descriptor_table_google_2fapi_2fannotations_2eproto,
  &::descriptor_table_google_2fprotobuf_2fduration_2eproto,
  &::descriptor_table_yandex_2fcloud_2fapi_2foperation_2eproto,
  &::descriptor_table_yandex_2fcloud_2foperation_2foperation_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_yandex_2fcloud_2fai_2fstt_2fv2_2fstt_5fservice_2eproto_sccs[11] = {
  &scc_info_LongRunningRecognitionRequest_yandex_2fcloud_2fai_2fstt_2fv2_2fstt_5fservice_2eproto.base,
  &scc_info_LongRunningRecognitionResponse_yandex_2fcloud_2fai_2fstt_2fv2_2fstt_5fservice_2eproto.base,
  &scc_info_RecognitionAudio_yandex_2fcloud_2fai_2fstt_2fv2_2fstt_5fservice_2eproto.base,
  &scc_info_RecognitionConfig_yandex_2fcloud_2fai_2fstt_2fv2_2fstt_5fservice_2eproto.base,
  &scc_info_RecognitionSpec_yandex_2fcloud_2fai_2fstt_2fv2_2fstt_5fservice_2eproto.base,
  &scc_info_SpeechRecognitionAlternative_yandex_2fcloud_2fai_2fstt_2fv2_2fstt_5fservice_2eproto.base,
  &scc_info_SpeechRecognitionChunk_yandex_2fcloud_2fai_2fstt_2fv2_2fstt_5fservice_2eproto.base,
  &scc_info_SpeechRecognitionResult_yandex_2fcloud_2fai_2fstt_2fv2_2fstt_5fservice_2eproto.base,
  &scc_info_StreamingRecognitionRequest_yandex_2fcloud_2fai_2fstt_2fv2_2fstt_5fservice_2eproto.base,
  &scc_info_StreamingRecognitionResponse_yandex_2fcloud_2fai_2fstt_2fv2_2fstt_5fservice_2eproto.base,
  &scc_info_WordInfo_yandex_2fcloud_2fai_2fstt_2fv2_2fstt_5fservice_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_yandex_2fcloud_2fai_2fstt_2fv2_2fstt_5fservice_2eproto_once;
static bool descriptor_table_yandex_2fcloud_2fai_2fstt_2fv2_2fstt_5fservice_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_yandex_2fcloud_2fai_2fstt_2fv2_2fstt_5fservice_2eproto = {
  &descriptor_table_yandex_2fcloud_2fai_2fstt_2fv2_2fstt_5fservice_2eproto_initialized, descriptor_table_protodef_yandex_2fcloud_2fai_2fstt_2fv2_2fstt_5fservice_2eproto, "yandex/cloud/ai/stt/v2/stt_service.proto", 2237,
  &descriptor_table_yandex_2fcloud_2fai_2fstt_2fv2_2fstt_5fservice_2eproto_once, descriptor_table_yandex_2fcloud_2fai_2fstt_2fv2_2fstt_5fservice_2eproto_sccs, descriptor_table_yandex_2fcloud_2fai_2fstt_2fv2_2fstt_5fservice_2eproto_deps, 11, 4,
  schemas, file_default_instances, TableStruct_yandex_2fcloud_2fai_2fstt_2fv2_2fstt_5fservice_2eproto::offsets,
  file_level_metadata_yandex_2fcloud_2fai_2fstt_2fv2_2fstt_5fservice_2eproto, 11, file_level_enum_descriptors_yandex_2fcloud_2fai_2fstt_2fv2_2fstt_5fservice_2eproto, file_level_service_descriptors_yandex_2fcloud_2fai_2fstt_2fv2_2fstt_5fservice_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_yandex_2fcloud_2fai_2fstt_2fv2_2fstt_5fservice_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_yandex_2fcloud_2fai_2fstt_2fv2_2fstt_5fservice_2eproto), true);
namespace yandex {
namespace cloud {
namespace ai {
namespace stt {
namespace v2 {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* RecognitionSpec_AudioEncoding_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_yandex_2fcloud_2fai_2fstt_2fv2_2fstt_5fservice_2eproto);
  return file_level_enum_descriptors_yandex_2fcloud_2fai_2fstt_2fv2_2fstt_5fservice_2eproto[0];
}
bool RecognitionSpec_AudioEncoding_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr RecognitionSpec_AudioEncoding RecognitionSpec::AUDIO_ENCODING_UNSPECIFIED;
constexpr RecognitionSpec_AudioEncoding RecognitionSpec::LINEAR16_PCM;
constexpr RecognitionSpec_AudioEncoding RecognitionSpec::OGG_OPUS;
constexpr RecognitionSpec_AudioEncoding RecognitionSpec::AudioEncoding_MIN;
constexpr RecognitionSpec_AudioEncoding RecognitionSpec::AudioEncoding_MAX;
constexpr int RecognitionSpec::AudioEncoding_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)

// ===================================================================

void LongRunningRecognitionRequest::InitAsDefaultInstance() {
  ::yandex::cloud::ai::stt::v2::_LongRunningRecognitionRequest_default_instance_._instance.get_mutable()->config_ = const_cast< ::yandex::cloud::ai::stt::v2::RecognitionConfig*>(
      ::yandex::cloud::ai::stt::v2::RecognitionConfig::internal_default_instance());
  ::yandex::cloud::ai::stt::v2::_LongRunningRecognitionRequest_default_instance_._instance.get_mutable()->audio_ = const_cast< ::yandex::cloud::ai::stt::v2::RecognitionAudio*>(
      ::yandex::cloud::ai::stt::v2::RecognitionAudio::internal_default_instance());
}
class LongRunningRecognitionRequest::HasBitSetters {
 public:
  static const ::yandex::cloud::ai::stt::v2::RecognitionConfig& config(const LongRunningRecognitionRequest* msg);
  static const ::yandex::cloud::ai::stt::v2::RecognitionAudio& audio(const LongRunningRecognitionRequest* msg);
};

const ::yandex::cloud::ai::stt::v2::RecognitionConfig&
LongRunningRecognitionRequest::HasBitSetters::config(const LongRunningRecognitionRequest* msg) {
  return *msg->config_;
}
const ::yandex::cloud::ai::stt::v2::RecognitionAudio&
LongRunningRecognitionRequest::HasBitSetters::audio(const LongRunningRecognitionRequest* msg) {
  return *msg->audio_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LongRunningRecognitionRequest::kConfigFieldNumber;
const int LongRunningRecognitionRequest::kAudioFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LongRunningRecognitionRequest::LongRunningRecognitionRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:yandex.cloud.ai.stt.v2.LongRunningRecognitionRequest)
}
LongRunningRecognitionRequest::LongRunningRecognitionRequest(const LongRunningRecognitionRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_config()) {
    config_ = new ::yandex::cloud::ai::stt::v2::RecognitionConfig(*from.config_);
  } else {
    config_ = nullptr;
  }
  if (from.has_audio()) {
    audio_ = new ::yandex::cloud::ai::stt::v2::RecognitionAudio(*from.audio_);
  } else {
    audio_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:yandex.cloud.ai.stt.v2.LongRunningRecognitionRequest)
}

void LongRunningRecognitionRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_LongRunningRecognitionRequest_yandex_2fcloud_2fai_2fstt_2fv2_2fstt_5fservice_2eproto.base);
  ::memset(&config_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&audio_) -
      reinterpret_cast<char*>(&config_)) + sizeof(audio_));
}

LongRunningRecognitionRequest::~LongRunningRecognitionRequest() {
  // @@protoc_insertion_point(destructor:yandex.cloud.ai.stt.v2.LongRunningRecognitionRequest)
  SharedDtor();
}

void LongRunningRecognitionRequest::SharedDtor() {
  if (this != internal_default_instance()) delete config_;
  if (this != internal_default_instance()) delete audio_;
}

void LongRunningRecognitionRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LongRunningRecognitionRequest& LongRunningRecognitionRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_LongRunningRecognitionRequest_yandex_2fcloud_2fai_2fstt_2fv2_2fstt_5fservice_2eproto.base);
  return *internal_default_instance();
}


void LongRunningRecognitionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:yandex.cloud.ai.stt.v2.LongRunningRecognitionRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && config_ != nullptr) {
    delete config_;
  }
  config_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && audio_ != nullptr) {
    delete audio_;
  }
  audio_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* LongRunningRecognitionRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .yandex.cloud.ai.stt.v2.RecognitionConfig config = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(mutable_config(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .yandex.cloud.ai.stt.v2.RecognitionAudio audio = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(mutable_audio(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool LongRunningRecognitionRequest::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:yandex.cloud.ai.stt.v2.LongRunningRecognitionRequest)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .yandex.cloud.ai.stt.v2.RecognitionConfig config = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .yandex.cloud.ai.stt.v2.RecognitionAudio audio = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_audio()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:yandex.cloud.ai.stt.v2.LongRunningRecognitionRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:yandex.cloud.ai.stt.v2.LongRunningRecognitionRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void LongRunningRecognitionRequest::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:yandex.cloud.ai.stt.v2.LongRunningRecognitionRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .yandex.cloud.ai.stt.v2.RecognitionConfig config = 1;
  if (this->has_config()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::config(this), output);
  }

  // .yandex.cloud.ai.stt.v2.RecognitionAudio audio = 2;
  if (this->has_audio()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::audio(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:yandex.cloud.ai.stt.v2.LongRunningRecognitionRequest)
}

::PROTOBUF_NAMESPACE_ID::uint8* LongRunningRecognitionRequest::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:yandex.cloud.ai.stt.v2.LongRunningRecognitionRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .yandex.cloud.ai.stt.v2.RecognitionConfig config = 1;
  if (this->has_config()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::config(this), target);
  }

  // .yandex.cloud.ai.stt.v2.RecognitionAudio audio = 2;
  if (this->has_audio()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::audio(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:yandex.cloud.ai.stt.v2.LongRunningRecognitionRequest)
  return target;
}

size_t LongRunningRecognitionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:yandex.cloud.ai.stt.v2.LongRunningRecognitionRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .yandex.cloud.ai.stt.v2.RecognitionConfig config = 1;
  if (this->has_config()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *config_);
  }

  // .yandex.cloud.ai.stt.v2.RecognitionAudio audio = 2;
  if (this->has_audio()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *audio_);
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LongRunningRecognitionRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:yandex.cloud.ai.stt.v2.LongRunningRecognitionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const LongRunningRecognitionRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<LongRunningRecognitionRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:yandex.cloud.ai.stt.v2.LongRunningRecognitionRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:yandex.cloud.ai.stt.v2.LongRunningRecognitionRequest)
    MergeFrom(*source);
  }
}

void LongRunningRecognitionRequest::MergeFrom(const LongRunningRecognitionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:yandex.cloud.ai.stt.v2.LongRunningRecognitionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_config()) {
    mutable_config()->::yandex::cloud::ai::stt::v2::RecognitionConfig::MergeFrom(from.config());
  }
  if (from.has_audio()) {
    mutable_audio()->::yandex::cloud::ai::stt::v2::RecognitionAudio::MergeFrom(from.audio());
  }
}

void LongRunningRecognitionRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:yandex.cloud.ai.stt.v2.LongRunningRecognitionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LongRunningRecognitionRequest::CopyFrom(const LongRunningRecognitionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:yandex.cloud.ai.stt.v2.LongRunningRecognitionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LongRunningRecognitionRequest::IsInitialized() const {
  return true;
}

void LongRunningRecognitionRequest::Swap(LongRunningRecognitionRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LongRunningRecognitionRequest::InternalSwap(LongRunningRecognitionRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(config_, other->config_);
  swap(audio_, other->audio_);
}

::PROTOBUF_NAMESPACE_ID::Metadata LongRunningRecognitionRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void LongRunningRecognitionResponse::InitAsDefaultInstance() {
}
class LongRunningRecognitionResponse::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LongRunningRecognitionResponse::kChunksFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LongRunningRecognitionResponse::LongRunningRecognitionResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:yandex.cloud.ai.stt.v2.LongRunningRecognitionResponse)
}
LongRunningRecognitionResponse::LongRunningRecognitionResponse(const LongRunningRecognitionResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      chunks_(from.chunks_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:yandex.cloud.ai.stt.v2.LongRunningRecognitionResponse)
}

void LongRunningRecognitionResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_LongRunningRecognitionResponse_yandex_2fcloud_2fai_2fstt_2fv2_2fstt_5fservice_2eproto.base);
}

LongRunningRecognitionResponse::~LongRunningRecognitionResponse() {
  // @@protoc_insertion_point(destructor:yandex.cloud.ai.stt.v2.LongRunningRecognitionResponse)
  SharedDtor();
}

void LongRunningRecognitionResponse::SharedDtor() {
}

void LongRunningRecognitionResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LongRunningRecognitionResponse& LongRunningRecognitionResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_LongRunningRecognitionResponse_yandex_2fcloud_2fai_2fstt_2fv2_2fstt_5fservice_2eproto.base);
  return *internal_default_instance();
}


void LongRunningRecognitionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:yandex.cloud.ai.stt.v2.LongRunningRecognitionResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  chunks_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* LongRunningRecognitionResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .yandex.cloud.ai.stt.v2.SpeechRecognitionResult chunks = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_chunks(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 10);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool LongRunningRecognitionResponse::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:yandex.cloud.ai.stt.v2.LongRunningRecognitionResponse)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .yandex.cloud.ai.stt.v2.SpeechRecognitionResult chunks = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_chunks()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:yandex.cloud.ai.stt.v2.LongRunningRecognitionResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:yandex.cloud.ai.stt.v2.LongRunningRecognitionResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void LongRunningRecognitionResponse::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:yandex.cloud.ai.stt.v2.LongRunningRecognitionResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .yandex.cloud.ai.stt.v2.SpeechRecognitionResult chunks = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->chunks_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->chunks(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:yandex.cloud.ai.stt.v2.LongRunningRecognitionResponse)
}

::PROTOBUF_NAMESPACE_ID::uint8* LongRunningRecognitionResponse::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:yandex.cloud.ai.stt.v2.LongRunningRecognitionResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .yandex.cloud.ai.stt.v2.SpeechRecognitionResult chunks = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->chunks_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->chunks(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:yandex.cloud.ai.stt.v2.LongRunningRecognitionResponse)
  return target;
}

size_t LongRunningRecognitionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:yandex.cloud.ai.stt.v2.LongRunningRecognitionResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .yandex.cloud.ai.stt.v2.SpeechRecognitionResult chunks = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->chunks_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->chunks(static_cast<int>(i)));
    }
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LongRunningRecognitionResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:yandex.cloud.ai.stt.v2.LongRunningRecognitionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const LongRunningRecognitionResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<LongRunningRecognitionResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:yandex.cloud.ai.stt.v2.LongRunningRecognitionResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:yandex.cloud.ai.stt.v2.LongRunningRecognitionResponse)
    MergeFrom(*source);
  }
}

void LongRunningRecognitionResponse::MergeFrom(const LongRunningRecognitionResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:yandex.cloud.ai.stt.v2.LongRunningRecognitionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  chunks_.MergeFrom(from.chunks_);
}

void LongRunningRecognitionResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:yandex.cloud.ai.stt.v2.LongRunningRecognitionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LongRunningRecognitionResponse::CopyFrom(const LongRunningRecognitionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:yandex.cloud.ai.stt.v2.LongRunningRecognitionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LongRunningRecognitionResponse::IsInitialized() const {
  return true;
}

void LongRunningRecognitionResponse::Swap(LongRunningRecognitionResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LongRunningRecognitionResponse::InternalSwap(LongRunningRecognitionResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&chunks_)->InternalSwap(CastToBase(&other->chunks_));
}

::PROTOBUF_NAMESPACE_ID::Metadata LongRunningRecognitionResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void StreamingRecognitionRequest::InitAsDefaultInstance() {
  ::yandex::cloud::ai::stt::v2::_StreamingRecognitionRequest_default_instance_.config_ = const_cast< ::yandex::cloud::ai::stt::v2::RecognitionConfig*>(
      ::yandex::cloud::ai::stt::v2::RecognitionConfig::internal_default_instance());
  ::yandex::cloud::ai::stt::v2::_StreamingRecognitionRequest_default_instance_.audio_content_.UnsafeSetDefault(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
class StreamingRecognitionRequest::HasBitSetters {
 public:
  static const ::yandex::cloud::ai::stt::v2::RecognitionConfig& config(const StreamingRecognitionRequest* msg);
};

const ::yandex::cloud::ai::stt::v2::RecognitionConfig&
StreamingRecognitionRequest::HasBitSetters::config(const StreamingRecognitionRequest* msg) {
  return *msg->streaming_request_.config_;
}
void StreamingRecognitionRequest::set_allocated_config(::yandex::cloud::ai::stt::v2::RecognitionConfig* config) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_streaming_request();
  if (config) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      config = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, config, submessage_arena);
    }
    set_has_config();
    streaming_request_.config_ = config;
  }
  // @@protoc_insertion_point(field_set_allocated:yandex.cloud.ai.stt.v2.StreamingRecognitionRequest.config)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StreamingRecognitionRequest::kConfigFieldNumber;
const int StreamingRecognitionRequest::kAudioContentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StreamingRecognitionRequest::StreamingRecognitionRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:yandex.cloud.ai.stt.v2.StreamingRecognitionRequest)
}
StreamingRecognitionRequest::StreamingRecognitionRequest(const StreamingRecognitionRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_streaming_request();
  switch (from.streaming_request_case()) {
    case kConfig: {
      mutable_config()->::yandex::cloud::ai::stt::v2::RecognitionConfig::MergeFrom(from.config());
      break;
    }
    case kAudioContent: {
      set_audio_content(from.audio_content());
      break;
    }
    case STREAMING_REQUEST_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:yandex.cloud.ai.stt.v2.StreamingRecognitionRequest)
}

void StreamingRecognitionRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_StreamingRecognitionRequest_yandex_2fcloud_2fai_2fstt_2fv2_2fstt_5fservice_2eproto.base);
  clear_has_streaming_request();
}

StreamingRecognitionRequest::~StreamingRecognitionRequest() {
  // @@protoc_insertion_point(destructor:yandex.cloud.ai.stt.v2.StreamingRecognitionRequest)
  SharedDtor();
}

void StreamingRecognitionRequest::SharedDtor() {
  if (has_streaming_request()) {
    clear_streaming_request();
  }
}

void StreamingRecognitionRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StreamingRecognitionRequest& StreamingRecognitionRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_StreamingRecognitionRequest_yandex_2fcloud_2fai_2fstt_2fv2_2fstt_5fservice_2eproto.base);
  return *internal_default_instance();
}


void StreamingRecognitionRequest::clear_streaming_request() {
// @@protoc_insertion_point(one_of_clear_start:yandex.cloud.ai.stt.v2.StreamingRecognitionRequest)
  switch (streaming_request_case()) {
    case kConfig: {
      delete streaming_request_.config_;
      break;
    }
    case kAudioContent: {
      streaming_request_.audio_content_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case STREAMING_REQUEST_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = STREAMING_REQUEST_NOT_SET;
}


void StreamingRecognitionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:yandex.cloud.ai.stt.v2.StreamingRecognitionRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_streaming_request();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* StreamingRecognitionRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .yandex.cloud.ai.stt.v2.RecognitionConfig config = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(mutable_config(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes audio_content = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(mutable_audio_content(), ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool StreamingRecognitionRequest::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:yandex.cloud.ai.stt.v2.StreamingRecognitionRequest)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .yandex.cloud.ai.stt.v2.RecognitionConfig config = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes audio_content = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadBytes(
                input, this->mutable_audio_content()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:yandex.cloud.ai.stt.v2.StreamingRecognitionRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:yandex.cloud.ai.stt.v2.StreamingRecognitionRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void StreamingRecognitionRequest::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:yandex.cloud.ai.stt.v2.StreamingRecognitionRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .yandex.cloud.ai.stt.v2.RecognitionConfig config = 1;
  if (has_config()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::config(this), output);
  }

  // bytes audio_content = 2;
  if (has_audio_content()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->audio_content(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:yandex.cloud.ai.stt.v2.StreamingRecognitionRequest)
}

::PROTOBUF_NAMESPACE_ID::uint8* StreamingRecognitionRequest::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:yandex.cloud.ai.stt.v2.StreamingRecognitionRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .yandex.cloud.ai.stt.v2.RecognitionConfig config = 1;
  if (has_config()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::config(this), target);
  }

  // bytes audio_content = 2;
  if (has_audio_content()) {
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBytesToArray(
        2, this->audio_content(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:yandex.cloud.ai.stt.v2.StreamingRecognitionRequest)
  return target;
}

size_t StreamingRecognitionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:yandex.cloud.ai.stt.v2.StreamingRecognitionRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (streaming_request_case()) {
    // .yandex.cloud.ai.stt.v2.RecognitionConfig config = 1;
    case kConfig: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *streaming_request_.config_);
      break;
    }
    // bytes audio_content = 2;
    case kAudioContent: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->audio_content());
      break;
    }
    case STREAMING_REQUEST_NOT_SET: {
      break;
    }
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StreamingRecognitionRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:yandex.cloud.ai.stt.v2.StreamingRecognitionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const StreamingRecognitionRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<StreamingRecognitionRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:yandex.cloud.ai.stt.v2.StreamingRecognitionRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:yandex.cloud.ai.stt.v2.StreamingRecognitionRequest)
    MergeFrom(*source);
  }
}

void StreamingRecognitionRequest::MergeFrom(const StreamingRecognitionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:yandex.cloud.ai.stt.v2.StreamingRecognitionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.streaming_request_case()) {
    case kConfig: {
      mutable_config()->::yandex::cloud::ai::stt::v2::RecognitionConfig::MergeFrom(from.config());
      break;
    }
    case kAudioContent: {
      set_audio_content(from.audio_content());
      break;
    }
    case STREAMING_REQUEST_NOT_SET: {
      break;
    }
  }
}

void StreamingRecognitionRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:yandex.cloud.ai.stt.v2.StreamingRecognitionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StreamingRecognitionRequest::CopyFrom(const StreamingRecognitionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:yandex.cloud.ai.stt.v2.StreamingRecognitionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StreamingRecognitionRequest::IsInitialized() const {
  return true;
}

void StreamingRecognitionRequest::Swap(StreamingRecognitionRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StreamingRecognitionRequest::InternalSwap(StreamingRecognitionRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(streaming_request_, other->streaming_request_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata StreamingRecognitionRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void StreamingRecognitionResponse::InitAsDefaultInstance() {
}
class StreamingRecognitionResponse::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StreamingRecognitionResponse::kChunksFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StreamingRecognitionResponse::StreamingRecognitionResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:yandex.cloud.ai.stt.v2.StreamingRecognitionResponse)
}
StreamingRecognitionResponse::StreamingRecognitionResponse(const StreamingRecognitionResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      chunks_(from.chunks_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:yandex.cloud.ai.stt.v2.StreamingRecognitionResponse)
}

void StreamingRecognitionResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_StreamingRecognitionResponse_yandex_2fcloud_2fai_2fstt_2fv2_2fstt_5fservice_2eproto.base);
}

StreamingRecognitionResponse::~StreamingRecognitionResponse() {
  // @@protoc_insertion_point(destructor:yandex.cloud.ai.stt.v2.StreamingRecognitionResponse)
  SharedDtor();
}

void StreamingRecognitionResponse::SharedDtor() {
}

void StreamingRecognitionResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StreamingRecognitionResponse& StreamingRecognitionResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_StreamingRecognitionResponse_yandex_2fcloud_2fai_2fstt_2fv2_2fstt_5fservice_2eproto.base);
  return *internal_default_instance();
}


void StreamingRecognitionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:yandex.cloud.ai.stt.v2.StreamingRecognitionResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  chunks_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* StreamingRecognitionResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .yandex.cloud.ai.stt.v2.SpeechRecognitionChunk chunks = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_chunks(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 10);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool StreamingRecognitionResponse::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:yandex.cloud.ai.stt.v2.StreamingRecognitionResponse)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .yandex.cloud.ai.stt.v2.SpeechRecognitionChunk chunks = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_chunks()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:yandex.cloud.ai.stt.v2.StreamingRecognitionResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:yandex.cloud.ai.stt.v2.StreamingRecognitionResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void StreamingRecognitionResponse::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:yandex.cloud.ai.stt.v2.StreamingRecognitionResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .yandex.cloud.ai.stt.v2.SpeechRecognitionChunk chunks = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->chunks_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->chunks(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:yandex.cloud.ai.stt.v2.StreamingRecognitionResponse)
}

::PROTOBUF_NAMESPACE_ID::uint8* StreamingRecognitionResponse::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:yandex.cloud.ai.stt.v2.StreamingRecognitionResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .yandex.cloud.ai.stt.v2.SpeechRecognitionChunk chunks = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->chunks_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->chunks(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:yandex.cloud.ai.stt.v2.StreamingRecognitionResponse)
  return target;
}

size_t StreamingRecognitionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:yandex.cloud.ai.stt.v2.StreamingRecognitionResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .yandex.cloud.ai.stt.v2.SpeechRecognitionChunk chunks = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->chunks_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->chunks(static_cast<int>(i)));
    }
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StreamingRecognitionResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:yandex.cloud.ai.stt.v2.StreamingRecognitionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const StreamingRecognitionResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<StreamingRecognitionResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:yandex.cloud.ai.stt.v2.StreamingRecognitionResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:yandex.cloud.ai.stt.v2.StreamingRecognitionResponse)
    MergeFrom(*source);
  }
}

void StreamingRecognitionResponse::MergeFrom(const StreamingRecognitionResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:yandex.cloud.ai.stt.v2.StreamingRecognitionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  chunks_.MergeFrom(from.chunks_);
}

void StreamingRecognitionResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:yandex.cloud.ai.stt.v2.StreamingRecognitionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StreamingRecognitionResponse::CopyFrom(const StreamingRecognitionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:yandex.cloud.ai.stt.v2.StreamingRecognitionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StreamingRecognitionResponse::IsInitialized() const {
  return true;
}

void StreamingRecognitionResponse::Swap(StreamingRecognitionResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StreamingRecognitionResponse::InternalSwap(StreamingRecognitionResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&chunks_)->InternalSwap(CastToBase(&other->chunks_));
}

::PROTOBUF_NAMESPACE_ID::Metadata StreamingRecognitionResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RecognitionAudio::InitAsDefaultInstance() {
  ::yandex::cloud::ai::stt::v2::_RecognitionAudio_default_instance_.content_.UnsafeSetDefault(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::yandex::cloud::ai::stt::v2::_RecognitionAudio_default_instance_.uri_.UnsafeSetDefault(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
class RecognitionAudio::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RecognitionAudio::kContentFieldNumber;
const int RecognitionAudio::kUriFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RecognitionAudio::RecognitionAudio()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:yandex.cloud.ai.stt.v2.RecognitionAudio)
}
RecognitionAudio::RecognitionAudio(const RecognitionAudio& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_audio_source();
  switch (from.audio_source_case()) {
    case kContent: {
      set_content(from.content());
      break;
    }
    case kUri: {
      set_uri(from.uri());
      break;
    }
    case AUDIO_SOURCE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:yandex.cloud.ai.stt.v2.RecognitionAudio)
}

void RecognitionAudio::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RecognitionAudio_yandex_2fcloud_2fai_2fstt_2fv2_2fstt_5fservice_2eproto.base);
  clear_has_audio_source();
}

RecognitionAudio::~RecognitionAudio() {
  // @@protoc_insertion_point(destructor:yandex.cloud.ai.stt.v2.RecognitionAudio)
  SharedDtor();
}

void RecognitionAudio::SharedDtor() {
  if (has_audio_source()) {
    clear_audio_source();
  }
}

void RecognitionAudio::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RecognitionAudio& RecognitionAudio::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RecognitionAudio_yandex_2fcloud_2fai_2fstt_2fv2_2fstt_5fservice_2eproto.base);
  return *internal_default_instance();
}


void RecognitionAudio::clear_audio_source() {
// @@protoc_insertion_point(one_of_clear_start:yandex.cloud.ai.stt.v2.RecognitionAudio)
  switch (audio_source_case()) {
    case kContent: {
      audio_source_.content_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kUri: {
      audio_source_.uri_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case AUDIO_SOURCE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = AUDIO_SOURCE_NOT_SET;
}


void RecognitionAudio::Clear() {
// @@protoc_insertion_point(message_clear_start:yandex.cloud.ai.stt.v2.RecognitionAudio)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_audio_source();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* RecognitionAudio::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes content = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(mutable_content(), ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string uri = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_uri(), ptr, ctx, "yandex.cloud.ai.stt.v2.RecognitionAudio.uri");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool RecognitionAudio::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:yandex.cloud.ai.stt.v2.RecognitionAudio)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes content = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadBytes(
                input, this->mutable_content()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string uri = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_uri()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->uri().data(), static_cast<int>(this->uri().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "yandex.cloud.ai.stt.v2.RecognitionAudio.uri"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:yandex.cloud.ai.stt.v2.RecognitionAudio)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:yandex.cloud.ai.stt.v2.RecognitionAudio)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void RecognitionAudio::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:yandex.cloud.ai.stt.v2.RecognitionAudio)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes content = 1;
  if (has_content()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->content(), output);
  }

  // string uri = 2;
  if (has_uri()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->uri().data(), static_cast<int>(this->uri().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "yandex.cloud.ai.stt.v2.RecognitionAudio.uri");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->uri(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:yandex.cloud.ai.stt.v2.RecognitionAudio)
}

::PROTOBUF_NAMESPACE_ID::uint8* RecognitionAudio::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:yandex.cloud.ai.stt.v2.RecognitionAudio)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes content = 1;
  if (has_content()) {
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBytesToArray(
        1, this->content(), target);
  }

  // string uri = 2;
  if (has_uri()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->uri().data(), static_cast<int>(this->uri().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "yandex.cloud.ai.stt.v2.RecognitionAudio.uri");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        2, this->uri(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:yandex.cloud.ai.stt.v2.RecognitionAudio)
  return target;
}

size_t RecognitionAudio::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:yandex.cloud.ai.stt.v2.RecognitionAudio)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (audio_source_case()) {
    // bytes content = 1;
    case kContent: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->content());
      break;
    }
    // string uri = 2;
    case kUri: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->uri());
      break;
    }
    case AUDIO_SOURCE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RecognitionAudio::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:yandex.cloud.ai.stt.v2.RecognitionAudio)
  GOOGLE_DCHECK_NE(&from, this);
  const RecognitionAudio* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RecognitionAudio>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:yandex.cloud.ai.stt.v2.RecognitionAudio)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:yandex.cloud.ai.stt.v2.RecognitionAudio)
    MergeFrom(*source);
  }
}

void RecognitionAudio::MergeFrom(const RecognitionAudio& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:yandex.cloud.ai.stt.v2.RecognitionAudio)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.audio_source_case()) {
    case kContent: {
      set_content(from.content());
      break;
    }
    case kUri: {
      set_uri(from.uri());
      break;
    }
    case AUDIO_SOURCE_NOT_SET: {
      break;
    }
  }
}

void RecognitionAudio::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:yandex.cloud.ai.stt.v2.RecognitionAudio)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RecognitionAudio::CopyFrom(const RecognitionAudio& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:yandex.cloud.ai.stt.v2.RecognitionAudio)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RecognitionAudio::IsInitialized() const {
  return true;
}

void RecognitionAudio::Swap(RecognitionAudio* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RecognitionAudio::InternalSwap(RecognitionAudio* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(audio_source_, other->audio_source_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata RecognitionAudio::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RecognitionConfig::InitAsDefaultInstance() {
  ::yandex::cloud::ai::stt::v2::_RecognitionConfig_default_instance_._instance.get_mutable()->specification_ = const_cast< ::yandex::cloud::ai::stt::v2::RecognitionSpec*>(
      ::yandex::cloud::ai::stt::v2::RecognitionSpec::internal_default_instance());
}
class RecognitionConfig::HasBitSetters {
 public:
  static const ::yandex::cloud::ai::stt::v2::RecognitionSpec& specification(const RecognitionConfig* msg);
};

const ::yandex::cloud::ai::stt::v2::RecognitionSpec&
RecognitionConfig::HasBitSetters::specification(const RecognitionConfig* msg) {
  return *msg->specification_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RecognitionConfig::kSpecificationFieldNumber;
const int RecognitionConfig::kFolderIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RecognitionConfig::RecognitionConfig()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:yandex.cloud.ai.stt.v2.RecognitionConfig)
}
RecognitionConfig::RecognitionConfig(const RecognitionConfig& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  folder_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.folder_id().size() > 0) {
    folder_id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.folder_id_);
  }
  if (from.has_specification()) {
    specification_ = new ::yandex::cloud::ai::stt::v2::RecognitionSpec(*from.specification_);
  } else {
    specification_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:yandex.cloud.ai.stt.v2.RecognitionConfig)
}

void RecognitionConfig::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RecognitionConfig_yandex_2fcloud_2fai_2fstt_2fv2_2fstt_5fservice_2eproto.base);
  folder_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  specification_ = nullptr;
}

RecognitionConfig::~RecognitionConfig() {
  // @@protoc_insertion_point(destructor:yandex.cloud.ai.stt.v2.RecognitionConfig)
  SharedDtor();
}

void RecognitionConfig::SharedDtor() {
  folder_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete specification_;
}

void RecognitionConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RecognitionConfig& RecognitionConfig::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RecognitionConfig_yandex_2fcloud_2fai_2fstt_2fv2_2fstt_5fservice_2eproto.base);
  return *internal_default_instance();
}


void RecognitionConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:yandex.cloud.ai.stt.v2.RecognitionConfig)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  folder_id_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && specification_ != nullptr) {
    delete specification_;
  }
  specification_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* RecognitionConfig::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .yandex.cloud.ai.stt.v2.RecognitionSpec specification = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(mutable_specification(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string folder_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_folder_id(), ptr, ctx, "yandex.cloud.ai.stt.v2.RecognitionConfig.folder_id");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool RecognitionConfig::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:yandex.cloud.ai.stt.v2.RecognitionConfig)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .yandex.cloud.ai.stt.v2.RecognitionSpec specification = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_specification()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string folder_id = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_folder_id()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->folder_id().data(), static_cast<int>(this->folder_id().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "yandex.cloud.ai.stt.v2.RecognitionConfig.folder_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:yandex.cloud.ai.stt.v2.RecognitionConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:yandex.cloud.ai.stt.v2.RecognitionConfig)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void RecognitionConfig::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:yandex.cloud.ai.stt.v2.RecognitionConfig)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .yandex.cloud.ai.stt.v2.RecognitionSpec specification = 1;
  if (this->has_specification()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::specification(this), output);
  }

  // string folder_id = 2;
  if (this->folder_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->folder_id().data(), static_cast<int>(this->folder_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "yandex.cloud.ai.stt.v2.RecognitionConfig.folder_id");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->folder_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:yandex.cloud.ai.stt.v2.RecognitionConfig)
}

::PROTOBUF_NAMESPACE_ID::uint8* RecognitionConfig::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:yandex.cloud.ai.stt.v2.RecognitionConfig)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .yandex.cloud.ai.stt.v2.RecognitionSpec specification = 1;
  if (this->has_specification()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::specification(this), target);
  }

  // string folder_id = 2;
  if (this->folder_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->folder_id().data(), static_cast<int>(this->folder_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "yandex.cloud.ai.stt.v2.RecognitionConfig.folder_id");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        2, this->folder_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:yandex.cloud.ai.stt.v2.RecognitionConfig)
  return target;
}

size_t RecognitionConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:yandex.cloud.ai.stt.v2.RecognitionConfig)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string folder_id = 2;
  if (this->folder_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->folder_id());
  }

  // .yandex.cloud.ai.stt.v2.RecognitionSpec specification = 1;
  if (this->has_specification()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *specification_);
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RecognitionConfig::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:yandex.cloud.ai.stt.v2.RecognitionConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const RecognitionConfig* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RecognitionConfig>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:yandex.cloud.ai.stt.v2.RecognitionConfig)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:yandex.cloud.ai.stt.v2.RecognitionConfig)
    MergeFrom(*source);
  }
}

void RecognitionConfig::MergeFrom(const RecognitionConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:yandex.cloud.ai.stt.v2.RecognitionConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.folder_id().size() > 0) {

    folder_id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.folder_id_);
  }
  if (from.has_specification()) {
    mutable_specification()->::yandex::cloud::ai::stt::v2::RecognitionSpec::MergeFrom(from.specification());
  }
}

void RecognitionConfig::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:yandex.cloud.ai.stt.v2.RecognitionConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RecognitionConfig::CopyFrom(const RecognitionConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:yandex.cloud.ai.stt.v2.RecognitionConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RecognitionConfig::IsInitialized() const {
  return true;
}

void RecognitionConfig::Swap(RecognitionConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RecognitionConfig::InternalSwap(RecognitionConfig* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  folder_id_.Swap(&other->folder_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(specification_, other->specification_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RecognitionConfig::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RecognitionSpec::InitAsDefaultInstance() {
}
class RecognitionSpec::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RecognitionSpec::kAudioEncodingFieldNumber;
const int RecognitionSpec::kSampleRateHertzFieldNumber;
const int RecognitionSpec::kLanguageCodeFieldNumber;
const int RecognitionSpec::kProfanityFilterFieldNumber;
const int RecognitionSpec::kModelFieldNumber;
const int RecognitionSpec::kPartialResultsFieldNumber;
const int RecognitionSpec::kSingleUtteranceFieldNumber;
const int RecognitionSpec::kAudioChannelCountFieldNumber;
const int RecognitionSpec::kRawResultsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RecognitionSpec::RecognitionSpec()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:yandex.cloud.ai.stt.v2.RecognitionSpec)
}
RecognitionSpec::RecognitionSpec(const RecognitionSpec& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  language_code_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.language_code().size() > 0) {
    language_code_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.language_code_);
  }
  model_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.model().size() > 0) {
    model_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.model_);
  }
  ::memcpy(&sample_rate_hertz_, &from.sample_rate_hertz_,
    static_cast<size_t>(reinterpret_cast<char*>(&audio_channel_count_) -
    reinterpret_cast<char*>(&sample_rate_hertz_)) + sizeof(audio_channel_count_));
  // @@protoc_insertion_point(copy_constructor:yandex.cloud.ai.stt.v2.RecognitionSpec)
}

void RecognitionSpec::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RecognitionSpec_yandex_2fcloud_2fai_2fstt_2fv2_2fstt_5fservice_2eproto.base);
  language_code_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  model_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&sample_rate_hertz_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&audio_channel_count_) -
      reinterpret_cast<char*>(&sample_rate_hertz_)) + sizeof(audio_channel_count_));
}

RecognitionSpec::~RecognitionSpec() {
  // @@protoc_insertion_point(destructor:yandex.cloud.ai.stt.v2.RecognitionSpec)
  SharedDtor();
}

void RecognitionSpec::SharedDtor() {
  language_code_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  model_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void RecognitionSpec::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RecognitionSpec& RecognitionSpec::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RecognitionSpec_yandex_2fcloud_2fai_2fstt_2fv2_2fstt_5fservice_2eproto.base);
  return *internal_default_instance();
}


void RecognitionSpec::Clear() {
// @@protoc_insertion_point(message_clear_start:yandex.cloud.ai.stt.v2.RecognitionSpec)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  language_code_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  model_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&sample_rate_hertz_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&audio_channel_count_) -
      reinterpret_cast<char*>(&sample_rate_hertz_)) + sizeof(audio_channel_count_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* RecognitionSpec::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .yandex.cloud.ai.stt.v2.RecognitionSpec.AudioEncoding audio_encoding = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          set_audio_encoding(static_cast<::yandex::cloud::ai::stt::v2::RecognitionSpec_AudioEncoding>(val));
        } else goto handle_unusual;
        continue;
      // int64 sample_rate_hertz = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          sample_rate_hertz_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string language_code = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_language_code(), ptr, ctx, "yandex.cloud.ai.stt.v2.RecognitionSpec.language_code");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool profanity_filter = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          profanity_filter_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string model = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_model(), ptr, ctx, "yandex.cloud.ai.stt.v2.RecognitionSpec.model");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool partial_results = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          partial_results_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool single_utterance = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          single_utterance_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 audio_channel_count = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 72)) {
          audio_channel_count_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool raw_results = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 80)) {
          raw_results_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool RecognitionSpec::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:yandex.cloud.ai.stt.v2.RecognitionSpec)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .yandex.cloud.ai.stt.v2.RecognitionSpec.AudioEncoding audio_encoding = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {
          int value = 0;
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   int, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_audio_encoding(static_cast< ::yandex::cloud::ai::stt::v2::RecognitionSpec_AudioEncoding >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 sample_rate_hertz = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (16 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64>(
                 input, &sample_rate_hertz_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string language_code = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (26 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_language_code()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->language_code().data(), static_cast<int>(this->language_code().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "yandex.cloud.ai.stt.v2.RecognitionSpec.language_code"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool profanity_filter = 4;
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (32 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &profanity_filter_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string model = 5;
      case 5: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (42 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_model()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->model().data(), static_cast<int>(this->model().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "yandex.cloud.ai.stt.v2.RecognitionSpec.model"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool partial_results = 7;
      case 7: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (56 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &partial_results_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool single_utterance = 8;
      case 8: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (64 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &single_utterance_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 audio_channel_count = 9;
      case 9: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (72 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64>(
                 input, &audio_channel_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool raw_results = 10;
      case 10: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (80 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &raw_results_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:yandex.cloud.ai.stt.v2.RecognitionSpec)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:yandex.cloud.ai.stt.v2.RecognitionSpec)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void RecognitionSpec::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:yandex.cloud.ai.stt.v2.RecognitionSpec)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .yandex.cloud.ai.stt.v2.RecognitionSpec.AudioEncoding audio_encoding = 1;
  if (this->audio_encoding() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnum(
      1, this->audio_encoding(), output);
  }

  // int64 sample_rate_hertz = 2;
  if (this->sample_rate_hertz() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64(2, this->sample_rate_hertz(), output);
  }

  // string language_code = 3;
  if (this->language_code().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->language_code().data(), static_cast<int>(this->language_code().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "yandex.cloud.ai.stt.v2.RecognitionSpec.language_code");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->language_code(), output);
  }

  // bool profanity_filter = 4;
  if (this->profanity_filter() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(4, this->profanity_filter(), output);
  }

  // string model = 5;
  if (this->model().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->model().data(), static_cast<int>(this->model().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "yandex.cloud.ai.stt.v2.RecognitionSpec.model");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->model(), output);
  }

  // bool partial_results = 7;
  if (this->partial_results() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(7, this->partial_results(), output);
  }

  // bool single_utterance = 8;
  if (this->single_utterance() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(8, this->single_utterance(), output);
  }

  // int64 audio_channel_count = 9;
  if (this->audio_channel_count() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64(9, this->audio_channel_count(), output);
  }

  // bool raw_results = 10;
  if (this->raw_results() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(10, this->raw_results(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:yandex.cloud.ai.stt.v2.RecognitionSpec)
}

::PROTOBUF_NAMESPACE_ID::uint8* RecognitionSpec::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:yandex.cloud.ai.stt.v2.RecognitionSpec)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .yandex.cloud.ai.stt.v2.RecognitionSpec.AudioEncoding audio_encoding = 1;
  if (this->audio_encoding() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->audio_encoding(), target);
  }

  // int64 sample_rate_hertz = 2;
  if (this->sample_rate_hertz() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->sample_rate_hertz(), target);
  }

  // string language_code = 3;
  if (this->language_code().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->language_code().data(), static_cast<int>(this->language_code().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "yandex.cloud.ai.stt.v2.RecognitionSpec.language_code");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        3, this->language_code(), target);
  }

  // bool profanity_filter = 4;
  if (this->profanity_filter() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(4, this->profanity_filter(), target);
  }

  // string model = 5;
  if (this->model().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->model().data(), static_cast<int>(this->model().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "yandex.cloud.ai.stt.v2.RecognitionSpec.model");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        5, this->model(), target);
  }

  // bool partial_results = 7;
  if (this->partial_results() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(7, this->partial_results(), target);
  }

  // bool single_utterance = 8;
  if (this->single_utterance() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(8, this->single_utterance(), target);
  }

  // int64 audio_channel_count = 9;
  if (this->audio_channel_count() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(9, this->audio_channel_count(), target);
  }

  // bool raw_results = 10;
  if (this->raw_results() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(10, this->raw_results(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:yandex.cloud.ai.stt.v2.RecognitionSpec)
  return target;
}

size_t RecognitionSpec::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:yandex.cloud.ai.stt.v2.RecognitionSpec)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string language_code = 3;
  if (this->language_code().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->language_code());
  }

  // string model = 5;
  if (this->model().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->model());
  }

  // int64 sample_rate_hertz = 2;
  if (this->sample_rate_hertz() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->sample_rate_hertz());
  }

  // .yandex.cloud.ai.stt.v2.RecognitionSpec.AudioEncoding audio_encoding = 1;
  if (this->audio_encoding() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->audio_encoding());
  }

  // bool profanity_filter = 4;
  if (this->profanity_filter() != 0) {
    total_size += 1 + 1;
  }

  // bool partial_results = 7;
  if (this->partial_results() != 0) {
    total_size += 1 + 1;
  }

  // bool single_utterance = 8;
  if (this->single_utterance() != 0) {
    total_size += 1 + 1;
  }

  // bool raw_results = 10;
  if (this->raw_results() != 0) {
    total_size += 1 + 1;
  }

  // int64 audio_channel_count = 9;
  if (this->audio_channel_count() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->audio_channel_count());
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RecognitionSpec::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:yandex.cloud.ai.stt.v2.RecognitionSpec)
  GOOGLE_DCHECK_NE(&from, this);
  const RecognitionSpec* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RecognitionSpec>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:yandex.cloud.ai.stt.v2.RecognitionSpec)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:yandex.cloud.ai.stt.v2.RecognitionSpec)
    MergeFrom(*source);
  }
}

void RecognitionSpec::MergeFrom(const RecognitionSpec& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:yandex.cloud.ai.stt.v2.RecognitionSpec)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.language_code().size() > 0) {

    language_code_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.language_code_);
  }
  if (from.model().size() > 0) {

    model_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.model_);
  }
  if (from.sample_rate_hertz() != 0) {
    set_sample_rate_hertz(from.sample_rate_hertz());
  }
  if (from.audio_encoding() != 0) {
    set_audio_encoding(from.audio_encoding());
  }
  if (from.profanity_filter() != 0) {
    set_profanity_filter(from.profanity_filter());
  }
  if (from.partial_results() != 0) {
    set_partial_results(from.partial_results());
  }
  if (from.single_utterance() != 0) {
    set_single_utterance(from.single_utterance());
  }
  if (from.raw_results() != 0) {
    set_raw_results(from.raw_results());
  }
  if (from.audio_channel_count() != 0) {
    set_audio_channel_count(from.audio_channel_count());
  }
}

void RecognitionSpec::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:yandex.cloud.ai.stt.v2.RecognitionSpec)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RecognitionSpec::CopyFrom(const RecognitionSpec& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:yandex.cloud.ai.stt.v2.RecognitionSpec)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RecognitionSpec::IsInitialized() const {
  return true;
}

void RecognitionSpec::Swap(RecognitionSpec* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RecognitionSpec::InternalSwap(RecognitionSpec* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  language_code_.Swap(&other->language_code_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  model_.Swap(&other->model_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(sample_rate_hertz_, other->sample_rate_hertz_);
  swap(audio_encoding_, other->audio_encoding_);
  swap(profanity_filter_, other->profanity_filter_);
  swap(partial_results_, other->partial_results_);
  swap(single_utterance_, other->single_utterance_);
  swap(raw_results_, other->raw_results_);
  swap(audio_channel_count_, other->audio_channel_count_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RecognitionSpec::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SpeechRecognitionChunk::InitAsDefaultInstance() {
}
class SpeechRecognitionChunk::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SpeechRecognitionChunk::kAlternativesFieldNumber;
const int SpeechRecognitionChunk::kFinalFieldNumber;
const int SpeechRecognitionChunk::kEndOfUtteranceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SpeechRecognitionChunk::SpeechRecognitionChunk()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:yandex.cloud.ai.stt.v2.SpeechRecognitionChunk)
}
SpeechRecognitionChunk::SpeechRecognitionChunk(const SpeechRecognitionChunk& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      alternatives_(from.alternatives_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&final_, &from.final_,
    static_cast<size_t>(reinterpret_cast<char*>(&end_of_utterance_) -
    reinterpret_cast<char*>(&final_)) + sizeof(end_of_utterance_));
  // @@protoc_insertion_point(copy_constructor:yandex.cloud.ai.stt.v2.SpeechRecognitionChunk)
}

void SpeechRecognitionChunk::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SpeechRecognitionChunk_yandex_2fcloud_2fai_2fstt_2fv2_2fstt_5fservice_2eproto.base);
  ::memset(&final_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&end_of_utterance_) -
      reinterpret_cast<char*>(&final_)) + sizeof(end_of_utterance_));
}

SpeechRecognitionChunk::~SpeechRecognitionChunk() {
  // @@protoc_insertion_point(destructor:yandex.cloud.ai.stt.v2.SpeechRecognitionChunk)
  SharedDtor();
}

void SpeechRecognitionChunk::SharedDtor() {
}

void SpeechRecognitionChunk::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SpeechRecognitionChunk& SpeechRecognitionChunk::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SpeechRecognitionChunk_yandex_2fcloud_2fai_2fstt_2fv2_2fstt_5fservice_2eproto.base);
  return *internal_default_instance();
}


void SpeechRecognitionChunk::Clear() {
// @@protoc_insertion_point(message_clear_start:yandex.cloud.ai.stt.v2.SpeechRecognitionChunk)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  alternatives_.Clear();
  ::memset(&final_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&end_of_utterance_) -
      reinterpret_cast<char*>(&final_)) + sizeof(end_of_utterance_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* SpeechRecognitionChunk::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .yandex.cloud.ai.stt.v2.SpeechRecognitionAlternative alternatives = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_alternatives(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 10);
        } else goto handle_unusual;
        continue;
      // bool final = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          final_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool end_of_utterance = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          end_of_utterance_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SpeechRecognitionChunk::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:yandex.cloud.ai.stt.v2.SpeechRecognitionChunk)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .yandex.cloud.ai.stt.v2.SpeechRecognitionAlternative alternatives = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_alternatives()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool final = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (16 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &final_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool end_of_utterance = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (24 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &end_of_utterance_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:yandex.cloud.ai.stt.v2.SpeechRecognitionChunk)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:yandex.cloud.ai.stt.v2.SpeechRecognitionChunk)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void SpeechRecognitionChunk::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:yandex.cloud.ai.stt.v2.SpeechRecognitionChunk)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .yandex.cloud.ai.stt.v2.SpeechRecognitionAlternative alternatives = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->alternatives_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->alternatives(static_cast<int>(i)),
      output);
  }

  // bool final = 2;
  if (this->final() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(2, this->final(), output);
  }

  // bool end_of_utterance = 3;
  if (this->end_of_utterance() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(3, this->end_of_utterance(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:yandex.cloud.ai.stt.v2.SpeechRecognitionChunk)
}

::PROTOBUF_NAMESPACE_ID::uint8* SpeechRecognitionChunk::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:yandex.cloud.ai.stt.v2.SpeechRecognitionChunk)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .yandex.cloud.ai.stt.v2.SpeechRecognitionAlternative alternatives = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->alternatives_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->alternatives(static_cast<int>(i)), target);
  }

  // bool final = 2;
  if (this->final() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->final(), target);
  }

  // bool end_of_utterance = 3;
  if (this->end_of_utterance() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(3, this->end_of_utterance(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:yandex.cloud.ai.stt.v2.SpeechRecognitionChunk)
  return target;
}

size_t SpeechRecognitionChunk::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:yandex.cloud.ai.stt.v2.SpeechRecognitionChunk)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .yandex.cloud.ai.stt.v2.SpeechRecognitionAlternative alternatives = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->alternatives_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->alternatives(static_cast<int>(i)));
    }
  }

  // bool final = 2;
  if (this->final() != 0) {
    total_size += 1 + 1;
  }

  // bool end_of_utterance = 3;
  if (this->end_of_utterance() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SpeechRecognitionChunk::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:yandex.cloud.ai.stt.v2.SpeechRecognitionChunk)
  GOOGLE_DCHECK_NE(&from, this);
  const SpeechRecognitionChunk* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SpeechRecognitionChunk>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:yandex.cloud.ai.stt.v2.SpeechRecognitionChunk)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:yandex.cloud.ai.stt.v2.SpeechRecognitionChunk)
    MergeFrom(*source);
  }
}

void SpeechRecognitionChunk::MergeFrom(const SpeechRecognitionChunk& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:yandex.cloud.ai.stt.v2.SpeechRecognitionChunk)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  alternatives_.MergeFrom(from.alternatives_);
  if (from.final() != 0) {
    set_final(from.final());
  }
  if (from.end_of_utterance() != 0) {
    set_end_of_utterance(from.end_of_utterance());
  }
}

void SpeechRecognitionChunk::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:yandex.cloud.ai.stt.v2.SpeechRecognitionChunk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SpeechRecognitionChunk::CopyFrom(const SpeechRecognitionChunk& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:yandex.cloud.ai.stt.v2.SpeechRecognitionChunk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SpeechRecognitionChunk::IsInitialized() const {
  return true;
}

void SpeechRecognitionChunk::Swap(SpeechRecognitionChunk* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SpeechRecognitionChunk::InternalSwap(SpeechRecognitionChunk* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&alternatives_)->InternalSwap(CastToBase(&other->alternatives_));
  swap(final_, other->final_);
  swap(end_of_utterance_, other->end_of_utterance_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SpeechRecognitionChunk::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SpeechRecognitionResult::InitAsDefaultInstance() {
}
class SpeechRecognitionResult::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SpeechRecognitionResult::kAlternativesFieldNumber;
const int SpeechRecognitionResult::kChannelTagFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SpeechRecognitionResult::SpeechRecognitionResult()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:yandex.cloud.ai.stt.v2.SpeechRecognitionResult)
}
SpeechRecognitionResult::SpeechRecognitionResult(const SpeechRecognitionResult& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      alternatives_(from.alternatives_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  channel_tag_ = from.channel_tag_;
  // @@protoc_insertion_point(copy_constructor:yandex.cloud.ai.stt.v2.SpeechRecognitionResult)
}

void SpeechRecognitionResult::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SpeechRecognitionResult_yandex_2fcloud_2fai_2fstt_2fv2_2fstt_5fservice_2eproto.base);
  channel_tag_ = PROTOBUF_LONGLONG(0);
}

SpeechRecognitionResult::~SpeechRecognitionResult() {
  // @@protoc_insertion_point(destructor:yandex.cloud.ai.stt.v2.SpeechRecognitionResult)
  SharedDtor();
}

void SpeechRecognitionResult::SharedDtor() {
}

void SpeechRecognitionResult::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SpeechRecognitionResult& SpeechRecognitionResult::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SpeechRecognitionResult_yandex_2fcloud_2fai_2fstt_2fv2_2fstt_5fservice_2eproto.base);
  return *internal_default_instance();
}


void SpeechRecognitionResult::Clear() {
// @@protoc_insertion_point(message_clear_start:yandex.cloud.ai.stt.v2.SpeechRecognitionResult)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  alternatives_.Clear();
  channel_tag_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* SpeechRecognitionResult::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .yandex.cloud.ai.stt.v2.SpeechRecognitionAlternative alternatives = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_alternatives(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 10);
        } else goto handle_unusual;
        continue;
      // int64 channel_tag = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          channel_tag_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SpeechRecognitionResult::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:yandex.cloud.ai.stt.v2.SpeechRecognitionResult)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .yandex.cloud.ai.stt.v2.SpeechRecognitionAlternative alternatives = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_alternatives()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 channel_tag = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (16 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64>(
                 input, &channel_tag_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:yandex.cloud.ai.stt.v2.SpeechRecognitionResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:yandex.cloud.ai.stt.v2.SpeechRecognitionResult)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void SpeechRecognitionResult::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:yandex.cloud.ai.stt.v2.SpeechRecognitionResult)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .yandex.cloud.ai.stt.v2.SpeechRecognitionAlternative alternatives = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->alternatives_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->alternatives(static_cast<int>(i)),
      output);
  }

  // int64 channel_tag = 2;
  if (this->channel_tag() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64(2, this->channel_tag(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:yandex.cloud.ai.stt.v2.SpeechRecognitionResult)
}

::PROTOBUF_NAMESPACE_ID::uint8* SpeechRecognitionResult::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:yandex.cloud.ai.stt.v2.SpeechRecognitionResult)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .yandex.cloud.ai.stt.v2.SpeechRecognitionAlternative alternatives = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->alternatives_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->alternatives(static_cast<int>(i)), target);
  }

  // int64 channel_tag = 2;
  if (this->channel_tag() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->channel_tag(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:yandex.cloud.ai.stt.v2.SpeechRecognitionResult)
  return target;
}

size_t SpeechRecognitionResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:yandex.cloud.ai.stt.v2.SpeechRecognitionResult)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .yandex.cloud.ai.stt.v2.SpeechRecognitionAlternative alternatives = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->alternatives_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->alternatives(static_cast<int>(i)));
    }
  }

  // int64 channel_tag = 2;
  if (this->channel_tag() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->channel_tag());
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SpeechRecognitionResult::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:yandex.cloud.ai.stt.v2.SpeechRecognitionResult)
  GOOGLE_DCHECK_NE(&from, this);
  const SpeechRecognitionResult* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SpeechRecognitionResult>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:yandex.cloud.ai.stt.v2.SpeechRecognitionResult)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:yandex.cloud.ai.stt.v2.SpeechRecognitionResult)
    MergeFrom(*source);
  }
}

void SpeechRecognitionResult::MergeFrom(const SpeechRecognitionResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:yandex.cloud.ai.stt.v2.SpeechRecognitionResult)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  alternatives_.MergeFrom(from.alternatives_);
  if (from.channel_tag() != 0) {
    set_channel_tag(from.channel_tag());
  }
}

void SpeechRecognitionResult::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:yandex.cloud.ai.stt.v2.SpeechRecognitionResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SpeechRecognitionResult::CopyFrom(const SpeechRecognitionResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:yandex.cloud.ai.stt.v2.SpeechRecognitionResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SpeechRecognitionResult::IsInitialized() const {
  return true;
}

void SpeechRecognitionResult::Swap(SpeechRecognitionResult* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SpeechRecognitionResult::InternalSwap(SpeechRecognitionResult* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&alternatives_)->InternalSwap(CastToBase(&other->alternatives_));
  swap(channel_tag_, other->channel_tag_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SpeechRecognitionResult::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SpeechRecognitionAlternative::InitAsDefaultInstance() {
}
class SpeechRecognitionAlternative::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SpeechRecognitionAlternative::kTextFieldNumber;
const int SpeechRecognitionAlternative::kConfidenceFieldNumber;
const int SpeechRecognitionAlternative::kWordsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SpeechRecognitionAlternative::SpeechRecognitionAlternative()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:yandex.cloud.ai.stt.v2.SpeechRecognitionAlternative)
}
SpeechRecognitionAlternative::SpeechRecognitionAlternative(const SpeechRecognitionAlternative& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      words_(from.words_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  text_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.text().size() > 0) {
    text_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
  confidence_ = from.confidence_;
  // @@protoc_insertion_point(copy_constructor:yandex.cloud.ai.stt.v2.SpeechRecognitionAlternative)
}

void SpeechRecognitionAlternative::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SpeechRecognitionAlternative_yandex_2fcloud_2fai_2fstt_2fv2_2fstt_5fservice_2eproto.base);
  text_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  confidence_ = 0;
}

SpeechRecognitionAlternative::~SpeechRecognitionAlternative() {
  // @@protoc_insertion_point(destructor:yandex.cloud.ai.stt.v2.SpeechRecognitionAlternative)
  SharedDtor();
}

void SpeechRecognitionAlternative::SharedDtor() {
  text_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SpeechRecognitionAlternative::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SpeechRecognitionAlternative& SpeechRecognitionAlternative::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SpeechRecognitionAlternative_yandex_2fcloud_2fai_2fstt_2fv2_2fstt_5fservice_2eproto.base);
  return *internal_default_instance();
}


void SpeechRecognitionAlternative::Clear() {
// @@protoc_insertion_point(message_clear_start:yandex.cloud.ai.stt.v2.SpeechRecognitionAlternative)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  words_.Clear();
  text_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  confidence_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* SpeechRecognitionAlternative::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string text = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_text(), ptr, ctx, "yandex.cloud.ai.stt.v2.SpeechRecognitionAlternative.text");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // float confidence = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 21)) {
          confidence_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // repeated .yandex.cloud.ai.stt.v2.WordInfo words = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_words(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 26);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SpeechRecognitionAlternative::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:yandex.cloud.ai.stt.v2.SpeechRecognitionAlternative)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string text = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_text()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->text().data(), static_cast<int>(this->text().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "yandex.cloud.ai.stt.v2.SpeechRecognitionAlternative.text"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float confidence = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (21 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   float, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &confidence_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .yandex.cloud.ai.stt.v2.WordInfo words = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (26 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_words()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:yandex.cloud.ai.stt.v2.SpeechRecognitionAlternative)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:yandex.cloud.ai.stt.v2.SpeechRecognitionAlternative)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void SpeechRecognitionAlternative::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:yandex.cloud.ai.stt.v2.SpeechRecognitionAlternative)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string text = 1;
  if (this->text().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->text().data(), static_cast<int>(this->text().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "yandex.cloud.ai.stt.v2.SpeechRecognitionAlternative.text");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->text(), output);
  }

  // float confidence = 2;
  if (!(this->confidence() <= 0 && this->confidence() >= 0)) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloat(2, this->confidence(), output);
  }

  // repeated .yandex.cloud.ai.stt.v2.WordInfo words = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->words_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->words(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:yandex.cloud.ai.stt.v2.SpeechRecognitionAlternative)
}

::PROTOBUF_NAMESPACE_ID::uint8* SpeechRecognitionAlternative::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:yandex.cloud.ai.stt.v2.SpeechRecognitionAlternative)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string text = 1;
  if (this->text().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->text().data(), static_cast<int>(this->text().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "yandex.cloud.ai.stt.v2.SpeechRecognitionAlternative.text");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        1, this->text(), target);
  }

  // float confidence = 2;
  if (!(this->confidence() <= 0 && this->confidence() >= 0)) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(2, this->confidence(), target);
  }

  // repeated .yandex.cloud.ai.stt.v2.WordInfo words = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->words_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->words(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:yandex.cloud.ai.stt.v2.SpeechRecognitionAlternative)
  return target;
}

size_t SpeechRecognitionAlternative::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:yandex.cloud.ai.stt.v2.SpeechRecognitionAlternative)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .yandex.cloud.ai.stt.v2.WordInfo words = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->words_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->words(static_cast<int>(i)));
    }
  }

  // string text = 1;
  if (this->text().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->text());
  }

  // float confidence = 2;
  if (!(this->confidence() <= 0 && this->confidence() >= 0)) {
    total_size += 1 + 4;
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SpeechRecognitionAlternative::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:yandex.cloud.ai.stt.v2.SpeechRecognitionAlternative)
  GOOGLE_DCHECK_NE(&from, this);
  const SpeechRecognitionAlternative* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SpeechRecognitionAlternative>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:yandex.cloud.ai.stt.v2.SpeechRecognitionAlternative)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:yandex.cloud.ai.stt.v2.SpeechRecognitionAlternative)
    MergeFrom(*source);
  }
}

void SpeechRecognitionAlternative::MergeFrom(const SpeechRecognitionAlternative& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:yandex.cloud.ai.stt.v2.SpeechRecognitionAlternative)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  words_.MergeFrom(from.words_);
  if (from.text().size() > 0) {

    text_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
  if (!(from.confidence() <= 0 && from.confidence() >= 0)) {
    set_confidence(from.confidence());
  }
}

void SpeechRecognitionAlternative::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:yandex.cloud.ai.stt.v2.SpeechRecognitionAlternative)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SpeechRecognitionAlternative::CopyFrom(const SpeechRecognitionAlternative& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:yandex.cloud.ai.stt.v2.SpeechRecognitionAlternative)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SpeechRecognitionAlternative::IsInitialized() const {
  return true;
}

void SpeechRecognitionAlternative::Swap(SpeechRecognitionAlternative* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SpeechRecognitionAlternative::InternalSwap(SpeechRecognitionAlternative* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&words_)->InternalSwap(CastToBase(&other->words_));
  text_.Swap(&other->text_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(confidence_, other->confidence_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SpeechRecognitionAlternative::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void WordInfo::InitAsDefaultInstance() {
  ::yandex::cloud::ai::stt::v2::_WordInfo_default_instance_._instance.get_mutable()->start_time_ = const_cast< PROTOBUF_NAMESPACE_ID::Duration*>(
      PROTOBUF_NAMESPACE_ID::Duration::internal_default_instance());
  ::yandex::cloud::ai::stt::v2::_WordInfo_default_instance_._instance.get_mutable()->end_time_ = const_cast< PROTOBUF_NAMESPACE_ID::Duration*>(
      PROTOBUF_NAMESPACE_ID::Duration::internal_default_instance());
}
class WordInfo::HasBitSetters {
 public:
  static const PROTOBUF_NAMESPACE_ID::Duration& start_time(const WordInfo* msg);
  static const PROTOBUF_NAMESPACE_ID::Duration& end_time(const WordInfo* msg);
};

const PROTOBUF_NAMESPACE_ID::Duration&
WordInfo::HasBitSetters::start_time(const WordInfo* msg) {
  return *msg->start_time_;
}
const PROTOBUF_NAMESPACE_ID::Duration&
WordInfo::HasBitSetters::end_time(const WordInfo* msg) {
  return *msg->end_time_;
}
void WordInfo::clear_start_time() {
  if (GetArenaNoVirtual() == nullptr && start_time_ != nullptr) {
    delete start_time_;
  }
  start_time_ = nullptr;
}
void WordInfo::clear_end_time() {
  if (GetArenaNoVirtual() == nullptr && end_time_ != nullptr) {
    delete end_time_;
  }
  end_time_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WordInfo::kStartTimeFieldNumber;
const int WordInfo::kEndTimeFieldNumber;
const int WordInfo::kWordFieldNumber;
const int WordInfo::kConfidenceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WordInfo::WordInfo()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:yandex.cloud.ai.stt.v2.WordInfo)
}
WordInfo::WordInfo(const WordInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  word_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.word().size() > 0) {
    word_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.word_);
  }
  if (from.has_start_time()) {
    start_time_ = new PROTOBUF_NAMESPACE_ID::Duration(*from.start_time_);
  } else {
    start_time_ = nullptr;
  }
  if (from.has_end_time()) {
    end_time_ = new PROTOBUF_NAMESPACE_ID::Duration(*from.end_time_);
  } else {
    end_time_ = nullptr;
  }
  confidence_ = from.confidence_;
  // @@protoc_insertion_point(copy_constructor:yandex.cloud.ai.stt.v2.WordInfo)
}

void WordInfo::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_WordInfo_yandex_2fcloud_2fai_2fstt_2fv2_2fstt_5fservice_2eproto.base);
  word_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&start_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&confidence_) -
      reinterpret_cast<char*>(&start_time_)) + sizeof(confidence_));
}

WordInfo::~WordInfo() {
  // @@protoc_insertion_point(destructor:yandex.cloud.ai.stt.v2.WordInfo)
  SharedDtor();
}

void WordInfo::SharedDtor() {
  word_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete start_time_;
  if (this != internal_default_instance()) delete end_time_;
}

void WordInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const WordInfo& WordInfo::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_WordInfo_yandex_2fcloud_2fai_2fstt_2fv2_2fstt_5fservice_2eproto.base);
  return *internal_default_instance();
}


void WordInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:yandex.cloud.ai.stt.v2.WordInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  word_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && start_time_ != nullptr) {
    delete start_time_;
  }
  start_time_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && end_time_ != nullptr) {
    delete end_time_;
  }
  end_time_ = nullptr;
  confidence_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* WordInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .google.protobuf.Duration start_time = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(mutable_start_time(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Duration end_time = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(mutable_end_time(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string word = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_word(), ptr, ctx, "yandex.cloud.ai.stt.v2.WordInfo.word");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // float confidence = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 37)) {
          confidence_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool WordInfo::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:yandex.cloud.ai.stt.v2.WordInfo)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.protobuf.Duration start_time = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_start_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Duration end_time = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_end_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string word = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (26 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_word()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->word().data(), static_cast<int>(this->word().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "yandex.cloud.ai.stt.v2.WordInfo.word"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float confidence = 4;
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (37 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   float, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &confidence_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:yandex.cloud.ai.stt.v2.WordInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:yandex.cloud.ai.stt.v2.WordInfo)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void WordInfo::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:yandex.cloud.ai.stt.v2.WordInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Duration start_time = 1;
  if (this->has_start_time()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::start_time(this), output);
  }

  // .google.protobuf.Duration end_time = 2;
  if (this->has_end_time()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::end_time(this), output);
  }

  // string word = 3;
  if (this->word().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->word().data(), static_cast<int>(this->word().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "yandex.cloud.ai.stt.v2.WordInfo.word");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->word(), output);
  }

  // float confidence = 4;
  if (!(this->confidence() <= 0 && this->confidence() >= 0)) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloat(4, this->confidence(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:yandex.cloud.ai.stt.v2.WordInfo)
}

::PROTOBUF_NAMESPACE_ID::uint8* WordInfo::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:yandex.cloud.ai.stt.v2.WordInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Duration start_time = 1;
  if (this->has_start_time()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::start_time(this), target);
  }

  // .google.protobuf.Duration end_time = 2;
  if (this->has_end_time()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::end_time(this), target);
  }

  // string word = 3;
  if (this->word().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->word().data(), static_cast<int>(this->word().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "yandex.cloud.ai.stt.v2.WordInfo.word");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        3, this->word(), target);
  }

  // float confidence = 4;
  if (!(this->confidence() <= 0 && this->confidence() >= 0)) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(4, this->confidence(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:yandex.cloud.ai.stt.v2.WordInfo)
  return target;
}

size_t WordInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:yandex.cloud.ai.stt.v2.WordInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string word = 3;
  if (this->word().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->word());
  }

  // .google.protobuf.Duration start_time = 1;
  if (this->has_start_time()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *start_time_);
  }

  // .google.protobuf.Duration end_time = 2;
  if (this->has_end_time()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *end_time_);
  }

  // float confidence = 4;
  if (!(this->confidence() <= 0 && this->confidence() >= 0)) {
    total_size += 1 + 4;
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WordInfo::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:yandex.cloud.ai.stt.v2.WordInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const WordInfo* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<WordInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:yandex.cloud.ai.stt.v2.WordInfo)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:yandex.cloud.ai.stt.v2.WordInfo)
    MergeFrom(*source);
  }
}

void WordInfo::MergeFrom(const WordInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:yandex.cloud.ai.stt.v2.WordInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.word().size() > 0) {

    word_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.word_);
  }
  if (from.has_start_time()) {
    mutable_start_time()->PROTOBUF_NAMESPACE_ID::Duration::MergeFrom(from.start_time());
  }
  if (from.has_end_time()) {
    mutable_end_time()->PROTOBUF_NAMESPACE_ID::Duration::MergeFrom(from.end_time());
  }
  if (!(from.confidence() <= 0 && from.confidence() >= 0)) {
    set_confidence(from.confidence());
  }
}

void WordInfo::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:yandex.cloud.ai.stt.v2.WordInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WordInfo::CopyFrom(const WordInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:yandex.cloud.ai.stt.v2.WordInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WordInfo::IsInitialized() const {
  return true;
}

void WordInfo::Swap(WordInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WordInfo::InternalSwap(WordInfo* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  word_.Swap(&other->word_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(start_time_, other->start_time_);
  swap(end_time_, other->end_time_);
  swap(confidence_, other->confidence_);
}

::PROTOBUF_NAMESPACE_ID::Metadata WordInfo::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v2
}  // namespace stt
}  // namespace ai
}  // namespace cloud
}  // namespace yandex
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::yandex::cloud::ai::stt::v2::LongRunningRecognitionRequest* Arena::CreateMaybeMessage< ::yandex::cloud::ai::stt::v2::LongRunningRecognitionRequest >(Arena* arena) {
  return Arena::CreateInternal< ::yandex::cloud::ai::stt::v2::LongRunningRecognitionRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::yandex::cloud::ai::stt::v2::LongRunningRecognitionResponse* Arena::CreateMaybeMessage< ::yandex::cloud::ai::stt::v2::LongRunningRecognitionResponse >(Arena* arena) {
  return Arena::CreateInternal< ::yandex::cloud::ai::stt::v2::LongRunningRecognitionResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::yandex::cloud::ai::stt::v2::StreamingRecognitionRequest* Arena::CreateMaybeMessage< ::yandex::cloud::ai::stt::v2::StreamingRecognitionRequest >(Arena* arena) {
  return Arena::CreateInternal< ::yandex::cloud::ai::stt::v2::StreamingRecognitionRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::yandex::cloud::ai::stt::v2::StreamingRecognitionResponse* Arena::CreateMaybeMessage< ::yandex::cloud::ai::stt::v2::StreamingRecognitionResponse >(Arena* arena) {
  return Arena::CreateInternal< ::yandex::cloud::ai::stt::v2::StreamingRecognitionResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::yandex::cloud::ai::stt::v2::RecognitionAudio* Arena::CreateMaybeMessage< ::yandex::cloud::ai::stt::v2::RecognitionAudio >(Arena* arena) {
  return Arena::CreateInternal< ::yandex::cloud::ai::stt::v2::RecognitionAudio >(arena);
}
template<> PROTOBUF_NOINLINE ::yandex::cloud::ai::stt::v2::RecognitionConfig* Arena::CreateMaybeMessage< ::yandex::cloud::ai::stt::v2::RecognitionConfig >(Arena* arena) {
  return Arena::CreateInternal< ::yandex::cloud::ai::stt::v2::RecognitionConfig >(arena);
}
template<> PROTOBUF_NOINLINE ::yandex::cloud::ai::stt::v2::RecognitionSpec* Arena::CreateMaybeMessage< ::yandex::cloud::ai::stt::v2::RecognitionSpec >(Arena* arena) {
  return Arena::CreateInternal< ::yandex::cloud::ai::stt::v2::RecognitionSpec >(arena);
}
template<> PROTOBUF_NOINLINE ::yandex::cloud::ai::stt::v2::SpeechRecognitionChunk* Arena::CreateMaybeMessage< ::yandex::cloud::ai::stt::v2::SpeechRecognitionChunk >(Arena* arena) {
  return Arena::CreateInternal< ::yandex::cloud::ai::stt::v2::SpeechRecognitionChunk >(arena);
}
template<> PROTOBUF_NOINLINE ::yandex::cloud::ai::stt::v2::SpeechRecognitionResult* Arena::CreateMaybeMessage< ::yandex::cloud::ai::stt::v2::SpeechRecognitionResult >(Arena* arena) {
  return Arena::CreateInternal< ::yandex::cloud::ai::stt::v2::SpeechRecognitionResult >(arena);
}
template<> PROTOBUF_NOINLINE ::yandex::cloud::ai::stt::v2::SpeechRecognitionAlternative* Arena::CreateMaybeMessage< ::yandex::cloud::ai::stt::v2::SpeechRecognitionAlternative >(Arena* arena) {
  return Arena::CreateInternal< ::yandex::cloud::ai::stt::v2::SpeechRecognitionAlternative >(arena);
}
template<> PROTOBUF_NOINLINE ::yandex::cloud::ai::stt::v2::WordInfo* Arena::CreateMaybeMessage< ::yandex::cloud::ai::stt::v2::WordInfo >(Arena* arena) {
  return Arena::CreateInternal< ::yandex::cloud::ai::stt::v2::WordInfo >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
